Comparing source compatibility of /home/someone/git/com.github/io7m/jaffirm/com.io7m.jaffirm.core/target/com.io7m.jaffirm.core-1.1.0.jar against /home/someone/.m2/repository/com/io7m/jaffirm/com.io7m.jaffirm.core/1.0.1/com.io7m.jaffirm.core-1.0.1.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
***  MODIFIED CLASS: PUBLIC FINAL com.io7m.jaffirm.core.Invariants  (not serializable)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) java.lang.Object checkInvariantV(java.lang.Object, boolean, java.lang.String, java.lang.Object[])
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void checkInvariantV(boolean, java.lang.String, java.lang.Object[])
***  MODIFIED CLASS: PUBLIC FINAL com.io7m.jaffirm.core.Postconditions  (not serializable)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) java.lang.Object checkPostconditionV(java.lang.Object, boolean, java.lang.String, java.lang.Object[])
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void checkPostconditionV(boolean, java.lang.String, java.lang.Object[])
***  MODIFIED CLASS: PUBLIC FINAL com.io7m.jaffirm.core.Preconditions  (not serializable)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) java.lang.Object checkPreconditionV(java.lang.Object, boolean, java.lang.String, java.lang.Object[])
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void checkPreconditionV(boolean, java.lang.String, java.lang.Object[])
